x-images:
  django: &django
    image: geotrek
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: prod
      args:
        BASE_IMAGE: ubuntu:jammy
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    user: ${UID:-0}:${GID:-0}
    env_file:
      - .env
    volumes:
      - ./var:/opt/geotrek-admin/var

services:
  postgres:
    image: my-pgrouting:latest
    env_file:
      - .env
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - hiking-alerts_geotrek-network

  convertit:
    image: my-convertit:latest
    networks:
      - hiking-alerts_geotrek-network

  memcached:
    image: memcached:1.5-alpine
    networks:
      - hiking-alerts_geotrek-network

  screamshotter:
    image: my-screamshotter:latest
    networks:
      - hiking-alerts_geotrek-network

  celery:
    <<: [ *django ]
    depends_on:
      - postgres
      - memcached
    command: celery -A geotrek worker -c 1
    networks:
      - hiking-alerts_geotrek-network

  web:
    <<: [ *django ]
    depends_on:
      - postgres
      - screamshotter
      - memcached
      - convertit
      - celery
    networks:
      - hiking-alerts_geotrek-network
      - hiking-alerts_pass-network
    volumes:
      - ./var:/opt/geotrek-admin/var

  geotrek-db-service:
    image: geotrek-db-service
    networks:
      - hiking-alerts_geotrek-network
      - hiking-alerts_pass-network

networks:
  hiking-alerts_geotrek-network:
    external: true
  hiking-alerts_pass-network:
    external: true

volumes:
  postgres: