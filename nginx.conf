events {
  worker_connections 1024;
}

http {
  limit_req_zone $binary_remote_addr zone=zone1:10m rate=20r/m;
  limit_req_zone $binary_remote_addr zone=zone2:10m rate=100r/m;
  limit_req_zone $binary_remote_addr zone=zone3:10m rate=100r/m;

  server {
      listen 80;
      server_name v220241074781291394.goodsrv.de;

      # Restrict access to a specific IP (optional)
      allow localhost;  # Replace with whitelisted IP addresses or keep for localhost-only access
      deny all;

      # Redirect all HTTP requests to HTTPS
      return 301 https://$host$request_uri;
  }

  server {
      listen 443 ssl;
      server_name v220241074781291394.goodsrv.de;

      # SSL certificate and key
      /etc/letsencrypt/live/v220241074781291394.goodsrv.de/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/v220241074781291394.goodsrv.de/privkey.pem;

      # SSL settings (recommended)
      ssl_protocols TLSv1.2 TLSv1.3;
      ssl_ciphers HIGH:!aNULL:!MD5;
      ssl_prefer_server_ciphers on;

      # Restrict access to a specific IP (optional)
      allow localhost;  # Replace with whitelisted IP addresses or keep for localhost-only access
      deny all;

      location / {
          limit_req zone=zone3 burst=0 nodelay;
          proxy_pass http://angular:4200; # Replace with your Angular container's IP:Port
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }
  }

  server {
    listen 8080 ssl;
    server_name v220241074781291394.goodsrv.de;

    # SSL certificate settings
    ssl_certificate /etc/letsencrypt/live/v220241074781291394.goodsrv.de/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/v220241074781291394.goodsrv.de/privkey.pem;

    # SSL settings (recommended)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Restrict access to a specific IP (optional)
    allow localhost;  # Replace with whitelisted IP addresses or keep for localhost-only access
    deny all;

    location /v1/events/pull {
       limit_req zone=zone1 burst=0 nodelay;
       include /etc/nginx/springboot-proxy-headers.conf;
       proxy_pass http://spring-boot-app:8080;
    }

    location /v1/map/layer {
       limit_req zone=zone2 burst=0 nodelay;
       include /etc/nginx/springboot-proxy-headers.conf;
       proxy_pass http://spring-boot-app:8080;
    }

    location / {
       include /etc/nginx/springboot-proxy-headers.conf;
       proxy_pass http://spring-boot-app:8080; # Proxy to Spring Boot app
    }
  }
}
